trigger:
- dev

pool:
  name: "JioBuildAgent"
  
variables:
- group: jio_health_variables
- name: APP_NAME
  value: promotion-service
- name: ENV
  value: $(Build.SourceBranchName)
- name: IMAGE_NAME
  value: $(DOCKER_IMAGE_BASE_NAME)$(APP_NAME):$(ENV)-latest
- name: VERSIONED_TAG
  value: $(ENV)-$(Build.BuildNumber)
- name: VERSIONED_IMAGE_NAME
  value: $(DOCKER_IMAGE_BASE_NAME)$(APP_NAME):$(ENV)-$(Build.BuildNumber)

steps:
- script: docker login $(DOCKER_SERVER) -u="$(DOCKER_USERNAME)" -p="$(DOCKER_PASSWORD)"
  displayName: Logging-in to docker

- script: docker build --network=host --build-arg PROXY_NO=$PROXY_NO --build-arg PROXY_HTTPS=$PROXY_HTTPS --build-arg PROXY_HTTP=$PROXY_HTTP -t $(IMAGE_NAME) .
  displayName: 'Building the docker image $(IMAGE_NAME)'

- script: docker push $(IMAGE_NAME)
  displayName: 'Pushing the image $(IMAGE_NAME) to docker'

- script: docker tag $(IMAGE_NAME) $(VERSIONED_IMAGE_NAME)
  displayName: 'Re-tagging the docker image $(VERSIONED_IMAGE_NAME)'

- script: docker push $(VERSIONED_IMAGE_NAME)
  displayName: 'Pushing the image $(VERSIONED_IMAGE_NAME) to docker'

- script: echo $(VERSIONED_TAG) > VERSIONED_TAG
  displayName: 'Pushing the tag $(VERSIONED_TAG) into VERSIONED_TAG'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: VERSIONED_TAG'
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)/VERSIONED_TAG'
    artifactName: drop_version

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'


- task: mspremier.PostBuildCleanup.PostBuildCleanup-task.PostBuildCleanup@3
  displayName: "Clean Agent Directories"
- bash: |
    docker rmi $(IMAGE_NAME)
    docker rmi $(VERSIONED_IMAGE_NAME)
  displayName: "Docker cleanup"
